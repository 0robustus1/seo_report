#!/usr/bin/env ruby

require "seo_report"
require "getoptlong"

options = GetoptLong.new(
  ["--json", GetoptLong::NO_ARGUMENT],
  ["--header", "-H", GetoptLong::REQUIRED_ARGUMENT],
  ["--help", "-h", GetoptLong::NO_ARGUMENT])

opts = {}
options.each do |opt, val|
  if opts[opt]
    opts[opt] = Array(opts[opt]) << val
  else
    opts[opt] = val
  end
end

if opts["--help"]
  puts <<~HELP
    seo-report â€” generate basic SEO reports of a URL
    Usage:
      --json, generate a JSON report. Can be used by other tools
      --header 'HEADER string', send additional headers to the server. Each
        header must be a field-value pair, separated by a : (colon). This flag
        can be provided multiple times to set multiple header fields.
      --help, print this help page
  HELP
  exit 2
end

url = ARGV[0]
headers = Array(opts["--header"]).each_with_object({}) do |str, coll|
  header, value = str.split(/\s*:\s*/, 2)
  coll[header] = value
end
if url.nil? || url.empty?
  abort("Please provide a url to seo-report.\nUsage: seo-report URL")
else
  if opts["--json"]
    SeoReport::Representation::Json.represent_with_report_for(url, headers)
  else
    SeoReport::Representation::Cli.represent_with_report_for(url, headers)
  end
end
